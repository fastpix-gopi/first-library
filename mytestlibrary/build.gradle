plugins {
//    alias(libs.plugins.android.application)
    id 'com.android.library'
    id 'maven-publish'

}

android {
    namespace 'com.fastpix.mytestlibrary'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.navigation.fragment
    implementation libs.navigation.ui
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}
task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs

    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

publishing {
    publications {
        release(MavenPublication) {
//            from components.release
            from components.findByName('release')

            groupId = 'com.fastpix'
            artifactId = 'mytestlibrary'
            version = '1.0.0'

            artifact(sourcesJar) {
                classifier "sources"
            }

            artifact(javadocJar) {
                classifier "javadoc"
            }

            pom {
                name.set("My Test Library")
                description.set("A description of what My Library does")
                url.set("http://github.com/fastpix-gopi/first-library")

                licenses {
                    license {
                        name.set("The Apache Software License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }

                developers {
                    developer {
                        id.set("FP001")
                        name.set("Gopi")
                        email.set("gopiraj99599@gmail.com")
                    }
                }

                scm {
                    connection.set("scm:git:git://github.com/fastpix-gopi/first-library.git")
                    developerConnection.set("scm:git:ssh://github.com/fastpix-gopi/first-library.git")
                    url.set("https://github.com/fastpix-gopi/first-library")
                }
            }
        }
    }

    repositories {
        maven {
            name = "Sonatype"
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}


